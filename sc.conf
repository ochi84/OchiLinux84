#!/bin/bash

# Configfile for scripts

# Directories
export GITHUB_DIR="$HOME/github"
export BACKUP_DIR="$HOME/.backups"
export BACKUP_DIR_EXT="/media/jens/Elements/hpbackup"

# Special application files
export BACKUP_FILE="backup_$(date +%Y%m%d).tar.gz"

# Files necessary for "dispatch"
declare -A DIRS=(
    [dot.bashrc]="$HOME/.bashrc"
    [dot.vimrc]="$HOME/.vimrc"
    [rc.conf]="$HOME/.config/ranger/rc.conf"
    [rc.lua]="$HOME/.config/awesome/rc.lua"
    [backup]="/usr/local/bin/"
    [gitupd]="/usr/local/bin/"
    [snapcrash]="/usr/local/bin/"
    [update]="/usr/local/bin/"
    [dispatch]="/usr/local/bin/"
    [startup]="/usr/local/bin/"
    [bye]="/usr/local/bin/"
    [sc.conf]="$HOME/.config/sc.conf"
)

# Colors
export NC='\033[0m' # No Color
export RED='\033[0;31m'
export YELLOW='\033[0;33m'


# List of applications necessary for "startup"
applications=(
    "mc"            # Midnight Commander, a text-based file manager
    "ranger"        # Ranger, a file manager with VI keybindings
    "fzf"           # Fuzzy Finder, a powerful searching tool
    "bpytop"        # A resource monitoring tool
    "vim"           # VIM, a highly configurable text editor
    "vim-airline"   # Vim-airline, a status/tab line for VIM
    "vim-fugitive"  # Vim-fugitive, a Git wrapper for VIM
    "vim-gitgutter" # Vim plugin which shows a git diff in the 'gutter' (sign column)
    "vim-syntastic" # Syntastic is a syntax checking plugin
    "vim-tabular"   # Vim script for text filtering and alignment
    "micro"         # Text editor
    "cmatrix"       # Cmatrix, displays the Matrix falling characters animation
    "trash-cli"     # Command interface for the recycle bin
    "exa"           # Modern replacement for ls
    "awesome"       # Highly configurable window manager for X
    "qutebrowser"   # Keyboard-driven, vim-like browser
    "picom"         # Lightweight compositor for X11
    "figlet"        # converts user input into ASCII banners
    "git"           # Distributed version control system
)

# Ensure root
root() {
if [ "$(id -u)" != "0" ]; then
   echo -e "${RED}This script must be run as root${NC}" >&2
   exit 1
fi
}

# Define directories

