#!/bin/bash

#                             __
#  ___  ___   ___ ___  _ __  / _|
# / __|/ __| / __/ _ \| '_ \| |_
# \__ \ (__ | (_| (_) | | | |  _|
# |___/\___(_)___\___/|_| |_|_|
#
# Config file : sc.conf
# Location    : ~/.config/
# Author      : Jens Ochmann
# Description : Configuration file for scripts to set colors, directories,
#               files, program packages etc.

# Enter your username
export USERNAME="jens"

# Files
export LOGFILE="$HOME/.cache/ochilinux84.log"

# Directories
export GITHUB_DIR="$HOME/ochilinux84"
export BACKUP_DIR="$HOME/.backups"
export BACKUP_DIR_EXT="/media/jens/Elements/hpbackup"
export SCRIPT_DIR="/usr/local/bin"
export BASHRC_DIR="$HOME"
export VIMRC_DIR="$HOME"
export RCLUA_DIR="$HOME/.config/awesome"
export RCCONF_DIR="$HOME/.config/ranger"
export SCCONF_DIR="$HOME/.config"
export PICOM_DIR="$HOME/.config/picom"
export NFCONF_DIR="$HOME/.config/neofetch"
export AWMBG_DIR="/usr/share/awesome/themes/default"
export FONT_DIR="/usr/share/fonts"
export TILIX_DIR="$HOME/.config/tilix"
export LNAV_DIR="$HOME/.config/lnav"

# Special application files
export BACKUP_FILE="backup_$(date +%Y%m%d).tar.gz"

# Files necessary for "dispatch"
declare -A DIRS=(
    [dot.bashrc]="$BASHRC_DIR/.bashrc"
    [dot.vimrc]="$VIMRC_DIR/.vimrc"
    [rc.conf]="$RCCONF_DIR/"
    [rc.lua]="$RCLUA_DIR/"
    [backup]="$SCRIPT_DIR/"
    [gitupd]="$SCRIPT_DIR/"
    [snapcrash]="$SCRIPT_DIR/"
    [update]="$SCRIPT_DIR/"
    [dispatch]="$SCRIPT_DIR/"
    [startup]="$SCRIPT_DIR/"
    [mountman]="$SCRIPT_DIR/"
    [bye]="$SCRIPT_DIR/"
    [sc.conf]="$SCCONF_DIR/"
    [nf.conf]="$NFCONF_DIR/config.conf"
    [awmbg.png]="$AWMBG_DIR/background.png"
    [config.json]="$LNAV_DIR/config.json"
)

# Colors
export NC='\033[0m' # No Color
export BLACK='\033[0;30m'
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export YELLOW='\033[0;33m'
export BLUE='\033[0;34m'
export MAGENTA='\033[0;35m'
export CYAN='\033[0;36m'
export WHITE='\033[0;37m'

# Define installation packages necessary for "startup"
minimal=(
    "mc"            # Midnight Commander, a text-based file manager
    "vim"           # VIM, a highly configurable text editor
    "micro"         # Text editor
    "ranger"        # Ranger, a file manager with VI keybindings
)

minimal_plus=(
    "vim-airline"   # Vim-airline, a status/tab line for VIM
    "vim-tabular"   # Vim script for text filtering and alignment
    "vim-fugitive"  # Vim-fugitive, a Git wrapper for VIM
    "vim-gitgutter" # Vim plugin which shows a git diff in the 'gutter' (sign column)
    "vim-syntastic" # Syntastic is a syntax checking plugin
)

expand=(
    "exa"           # Modern replacement for ls
    "fzf"           # Fuzzy Finder, a powerful searching tool
    "git"           # Distributed version control system
    "bpytop"        # A resource monitoring tool
    "cmatrix"       # Cmatrix, displays the Matrix falling characters animation
    "figlet"        # converts user input into ASCII banners
    "neofetch"      # Shows Linux System Information with Distribution Logo
    "trash-cli"     # Command interface for the recycle bin
)

full=(
    "lnav"          # ncurses-based log file viewer
    "picom"         # Lightweight compositor for X11
    "tilix"         # Tiling terminal emulator for GNOME
    "awesome"       # Highly configurable window manager for X
    "qutebrowser"   # Keyboard-driven, vim-like browser
    "dmenu"         # Dynamic menu is a generic menu for X.
    "caffeine"      # Stops the UI from going into standby full screen mode
)

# Clone awesome-wm-widgets repository
clone_awesome_widgets() {
    local repo_url="https://github.com/streetturtle/awesome-wm-widgets.git"
    local dest_dir="$HOME/.config/awesome"
    
    if [ ! -d "$dest_dir/awesome-wm-widgets" ]; then
        git clone "$repo_url" "$dest_dir/awesome-wm-widgets"
        echo -e "${GREEN}Cloned awesome-wm-widgets repository to $dest_dir${NC}"
    else
        echo -e "${YELLOW}Repository already exists in $dest_dir${NC}"
    fi
}

# Ensure root
root() {
if [ "$(id -u)" != "0" ]; then
   echo -e "${RED}This script must be run as root${NC}" >&2
   exit 1
fi
}
