#!/bin/bash

#        _ _                   _ 
#   __ _(_) |_ _   _ _ __   __| | 
#  / _` | | __| | | | '_ \ / _` | 
# | (_| | | |_| |_| | |_) | (_| | 
#  \__, |_|\__|\__,_| .__/ \__,_| 
#  |___/            |_|           
#                                
# Script: gitupd
# Author: Jens Ochmann
# Purpose: Backup and sync local files to GitHub directory.
# Location: /usr/local/bin
# Usage: Execute with './gitupd' to update files to $HOME/github.

GITHUB_DIR="$HOME/github"
DEVELOP_DIR="$HOME/develop"
RED='\033[0;31m'
NC='\033[0m' # No Color

# Function to print errors in red
function print_error {
    echo -e "${RED}$1${NC}"
}

# Check if the GitHub directory exists
if [ ! -d "$GITHUB_DIR" ]; then
    echo "GitHub directory does not exist. Creating directory: $GITHUB_DIR"
    mkdir -p "$GITHUB_DIR" || print_error "Failed to create $GITHUB_DIR"
fi

if [ ! -d "$DEVELOP_DIR" ]; then
    echo "Develop directory does not exist. Creating directory: $DEVELOP_DIR"
    mkdir -p "$DEVELOP_DIR" || print_error "Failed to create $DEVELOP_DIR"
fi

echo "Updating rc- & config files..."
# dotfiles
if ! cp -u $HOME/.bashrc "$GITHUB_DIR/dot.bashrc"; then
    print_error "Failed to update $HOME/.bashrc"
fi
if ! cp -u $HOME/.vimrc "$GITHUB_DIR/dot.vimrc"; then
    print_error "Failed to update $HOME/.vimrc"
fi
if ! cp -u $HOME/.config/awesome/rc.lua "$GITHUB_DIR/rc.lua"; then
    print_error "Failed to update rc.lua"
fi
if ! cp -u $HOME/.config/awesome/rc.lua.original "$GITHUB_DIR/rc.lua.original"; then
    print_error "Failed to update rc.lua.original"
fi

# config files for open repo "github"
if ! cp -u $HOME/.config/ranger/rc.conf "$GITHUB_DIR/rc.conf"; then
    print_error "Failed to update rc.conf"
fi
if ! cp -u $HOME/.config/picom/picom.conf "$GITHUB_DIR/picom.conf"; then
    print_error "Failed to update picom.conf"
fi

echo "Updating scripts..."
# scripts
declare -a scripts=("backup" "gitupd" "snapcrash" "update" "dispatch" "startup")
for script in "${scripts[@]}"; do
    if ! cp -u "/usr/local/bin/$script" "$GITHUB_DIR/"; then
        print_error "Failed to update $script"
    fi
done

echo "Update process completed."
