#!/bin/bash

#      _             _               
#  ___| |_ __ _ _ __| |_ _   _ _ __  
# / __| __/ _` | '__| __| | | | '_ \ 
# \__ \ || (_| | |  | |_| |_| | |_) |
# |___/\__\__,_|_|   \__|\__,_| .__/ 
#                             |_|  
#
# Script        : startup
# Author        : Jens Ochmann
# Location      : /usr/local/bin
# Description   : Install specified applications and run the 'dispatch' script to dispatch files from GitHub repository
# Requires root : Yes

NC='\033[0m' # No Color
YELLOW='\033[0;33m'

# Get the GitHub repository

if command -v git >/dev/null 2>&1; then
    echo -e "${YELLOW}Git is already installed.${NC}"
else
    echo -e "${YELLOW}Installing Git.${NC}"
    # Install Git
    sudo apt update
    if sudo apt install git -y; then
        echo -e "${YELLOW}Git successfully installed.${NC}"
    else
        echo -e "${RED}Failed to install Git.${NC}"
        exit 1
    fi
fi

echo -e "${YELLOW}Cloning the GitHub repository 'https://github.com/ochi84/github.git in $HOME to install the dispatch script'.${NC}"

cd $HOME

GITHUB_DIR="$HOME/github"
if [ -d $GITHUB_DIR ]; then
    echo -e "${YELLOW}GitHub repository already exists on your local system.${NC}"
else
    if git clone https://github.com/ochi84/github.git; then
        if sudo cp $GITHUB_DIR/dispatch /usr/local/bin/ && sudo chmod +x /usr/local/bin/dispatch; then
            echo -e "${YELLOW}Dispatch script successfully installed and made executable.${NC}"
        else
            echo -e "${RED}Failed to install and set execute permission on dispatch script.${NC}"
        fi
    else
        echo -e "${RED}Failed to clone GitHub repository. Check if there are network issues.${NC}"
        exit 1
    fi
fi

echo -e "${YELLOW}Running the 'dispatch' script...${NC}"

# Ensure that the 'dispatch' script is executable and available
if /usr/local/bin/dispatch; then
    echo -e "${YELLOW}Dispatch script executed successfully.${NC}"
else
    echo -e "${RED}Failed to execute the dispatch script.${NC}"
fi

echo -e "${YELLOW}Loading the configuration file 'sc.conf'...${NC}"

# Load config file
CONFIG_FILE="$HOME/.config/sc.conf"
if [[ -f "$CONFIG_FILE" ]]; then
    source "$CONFIG_FILE"
    echo -e "${YELLOW}Configuration file loaded successfully from $CONFIG_FILE.${NC}"
else
    echo -e "${RED}Error: Configuration file not found.${NC}"
    echo -e "${RED}Please ensure the configuration file 'sc.conf' exists at $HOME/.config/${NC}"
    exit 1
fi

echo -e "${YELLOW}Starting the installation of applications...${NC}"

# Function to install packages
install_packages() {
    local packages=("${@}")
    local installed=()
    for app in "${packages[@]}"; do
        if sudo apt install -y "$app"; then
            echo -e "${YELLOW}Installed $app successfully.${NC}"
            installed+=("$app")  # Add app to the list of successfully installed packages
        else
            echo -e "${RED}Failed to install $app. Check if the package exists or if there are network issues.${NC}"
        fi
    done
    echo -e "${YELLOW}Successfully installed the following packages:${NC}"
    printf '%s\n' "${installed[@]}"  # List successfully installed packages
}

# Display installation options with descriptions
echo -e "Select the installation type:"
echo -e "1 - Minimal Install: ${BLUE}Basic utilities like 'mc', 'vim', 'micro', 'ranger'.${NC}"
echo -e "2 - Minimal Plus Install: ${BLUE}Adds more advanced VIM plugins and tools on top of the Minimal Install.${NC}"
echo -e "3 - Expand Install: ${BLUE}Includes all packages from Minimal Plus and additional tools like 'git', 'fzf', 'exa'.${NC}"
echo -e "4 - Full Install: ${BLUE}The most comprehensive installation, including window managers and advanced applications.${NC}"
read -p "Enter your choice (1-4): " choice

# Prepare installation array based on user choice
all_packages=()
case $choice in
    1)
        all_packages+=("${minimal[@]}")
        ;;
    2)
        all_packages+=("${minimal[@]}")
        all_packages+=("${minimal_plus[@]}")
        ;;
    3)
        all_packages+=("${minimal[@]}")
        all_packages+=("${minimal_plus[@]}")
        all_packages+=("${expand[@]}")
        ;;
    4)
        all_packages+=("${minimal[@]}")
        all_packages+=("${minimal_plus[@]}")
        all_packages+=("${expand[@]}")
        all_packages+=("${full[@]}")
        ;;
    *)
        echo "Invalid choice. Exiting."
        exit 1
        ;;
esac

# Install selected packages
install_packages "${all_packages[@]}"

echo -e "${YELLOW}All desired applications have been installed.${NC}"

se
    echo -e "${YELLOW}Startup process completed.${NC}"
fi
